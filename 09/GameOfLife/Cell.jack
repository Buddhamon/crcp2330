// Will Lacey
// May 8th 2018
// Game of Life in Jack - Cell

class Cell 
{
   field boolean alive;
   field int index;

   constructor Cell new_i(int i) 
   {  
      let index = i;
      let alive = true;
      return this;   // a constructor is expected to return a reference to the new object
   }

   constructor Cell new_c(Cell c) 
   {  
      let index = c.getIndex();
      let alive = c.isAlive();
      return this;   // a constructor is expected to return a reference to the new object
   }

   // Turns on the cell
   method void spawns() 
   {
      let alive = true;
      return;
   }

   // Turns off the cell
   method void dies() 
   {
      let alive = false;
      return;
   }

   method void draw() 
   {
      var int row;
      var int col;
      let col = index/64;
      let row = index-(col*64);
      

      if(alive)
      {
         do Screen.setColor(true);
         do Screen.drawRectangle(row*8, col*8, (row*8)+7, (col*8)+7);
      }
      else
      {
         do Screen.setColor(false);
         do Screen.drawRectangle(row*8, col*8, (row*8)+7, (col*8)+7);
      }

      return;
   }

   //Getters
   method int getIndex() { return index; }
   method boolean isAlive() { return alive; }

   method void dispose()
   {
      do Memory.deAlloc(this);  // uses an OS routine to recycle the memory held by the object
      return;
   }
   
}

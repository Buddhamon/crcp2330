function Cell.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push constant 0
not
pop this 0
push pointer 0
return
function Cell.turn_on 0
push argument 0
pop pointer 0
push constant 0
not
pop this 0
push constant 0
return
function Cell.turn_of 0
push argument 0
pop pointer 0
push constant 0
pop this 0
push constant 0
return
function Cell.draw 2
push argument 0
pop pointer 0
push this 1
push constant 64
call Math.divide 2
pop local 1
push this 1
push local 1
push constant 64
call Math.multiply 2
sub
pop local 0
push this 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push constant 8
call Math.multiply 2
push local 1
push constant 8
call Math.multiply 2
push local 0
push constant 8
call Math.multiply 2
push constant 7
add
push local 1
push constant 8
call Math.multiply 2
push constant 7
add
call Screen.drawRectangle 4
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 8
call Math.multiply 2
push local 1
push constant 8
call Math.multiply 2
push local 0
push constant 8
call Math.multiply 2
push constant 7
add
push local 1
push constant 8
call Math.multiply 2
push constant 7
add
call Screen.drawRectangle 4
pop temp 0
label IF_END0
push constant 0
return
function Cell.get_alive 0
push argument 0
pop pointer 0
push this 0
return
